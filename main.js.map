{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,0O;;;;;;;;;;;;;;;;;;ACA0C;AAEc;AAMxD;IAJA;QAQkB,eAAU,GAAe;YACvC,KAAK,EAAE,qEAAW,CAAC,KAAK;YACxB,OAAO,EAAE,qEAAW,CAAC,OAAO;YAC5B,IAAI,EAAE,MAAM,CAAC,IAAI;YACjB,KAAK,EAAE,GAAG;YACV,MAAM,EAAE,GAAG;YACX,KAAK,EAAE;gBACL,OAAO,EAAE;oBACP,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,EAAC,uBAAuB,CAAC,CAAC;gBACxD,CAAC;gBAED,MAAM,EAAE;oBACP,4HAA4H;oBAC3H,IAAI,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,EAAC,YAAY,CAAC,CAAC;oBACxD,eAAe,CAAC,WAAW,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;oBACrC,eAAe,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;gBAChC,CAAC;gBAED,MAAM,EAAE;gBAER,CAAC;aACF;SACJ,CAAC;IAKF,CAAC;IAHQ,kCAAW,GAAlB,UAAmB,IAAiB;QAClC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IA9BU,YAAY;QAJxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;SACpC,CAAC;OACW,YAAY,CA+BxB;IAAD,mBAAC;CAAA;AA/BwB;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AAEM;AAES;AAaxD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAXrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,qEAAY;aACb;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;AClBtB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,KAAK,EAAE,WAAW;IAClB,OAAO,EAAG,OAAO;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACjBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div>\\r\\n  <phaser-component [gameConfig]=\\\"gameConfig\\\" (gameReady)=\\\"onGameReady($event)\\\">\\r\\n    \\r\\n  </phaser-component>\\r\\n</div>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\nimport {environment} from '../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  public game: Phaser.Game;\r\n\r\n\r\n  public readonly gameConfig: GameConfig = {\r\n    title: environment.title,\r\n    version: environment.version,\r\n    type: Phaser.AUTO,\r\n    width: 640,\r\n    height: 480,\r\n    scene: {\r\n      preload: function () {\r\n        this.load.image(\"background\",'assets/background.png');\r\n      },\r\n\r\n      create: function () {\r\n       // this.cameras.main.startFollow(this.add.text(0, 0, 'It\\'s the first screen of the game funny got').setOrigin(0.5), false);\r\n        var backgroundImage = this.add.sprite(0,0,\"background\");\r\n        backgroundImage.setPosition(320,240);\r\n        backgroundImage.setScale(0.8);\r\n      },\r\n\r\n      update: function () {\r\n        \r\n      }\r\n    }\r\n};\r\n\r\n  public onGameReady(game: Phaser.Game): void {\r\n    this.game = game;\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { PhaserModule } from 'phaser-component-library';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    PhaserModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  title: \"LD44 wech\",\r\n  version : \"1.0.1\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}